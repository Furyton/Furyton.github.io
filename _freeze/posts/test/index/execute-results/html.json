{
  "hash": "db2ded8a4334a40a13497007c192baca",
  "result": {
    "markdown": "---\ntitle: \"Quarto Basics\"\nauthor: \"Shiguang WU\"\ndate: today\ncategories: [hello world, test]\ndraft: false\n---\n\n## code chunk and cross reference\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar. and @sec-two. and @eq-einstein.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n## equations and callouts {#sec-two}\n\nnothing\n\nEinstein's theory of special relatively that expresses the equivalence of mass and energy:\n\n$$\nE = mc^{2}\n$$ {#eq-einstein}\n\n::: {.callout-note}\n## my note\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n::: {.callout-tip}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n::: {.callout-warning}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n::: {.callout-caution}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n::: {.callout-important}\nNote that there are five types of callouts, including:\n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\n## cite at the margin\n\nColorbars indicate the quantitative extent of image data.\nPlacing in a figure is non-trivial because room needs to\nbe made for them.\nThe simplest case is just attaching a \ncolorbar to each axes:^[See the [Matplotlib Gallery](https://matplotlib.org/stable/gallery/subplots_axes_and_figures/colorbar_placement.html) to explore colorbars further].\n\nColorbars indicate the quantitative extent of image data.\nPlacing in a figure is non-trivial because room needs to\n\n::: {.cell .column-screen-inset execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, axs = plt.subplots(2, 2)\nfig.set_size_inches(20, 8)\ncmaps = ['RdBu_r', 'viridis']\nfor col in range(2):\n    for row in range(2):\n        ax = axs[row, col]\n        pcm = ax.pcolormesh(\n          np.random.random((20, 20)) * (col + 1),\n          cmap=cmaps[col]\n        )\n        fig.colorbar(pcm, ax=ax)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=1497 height=638}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}